        // –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è Telegram –±–æ—Ç–∞
        const TELEGRAM_CONFIG = {
            botToken: '7972648152:AAEkEvxuTv4wrX0LEQkNhzSr7RRdRilA4-I',
            chatId: '-1002699091130',
            // Thread ID –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –≥—ñ–ª–æ–∫
            threads: {
                'trial_lesson': 1809,  // "–ó–∞—è–≤–∫–∏ –Ω–∞ –ø—Ä–æ–±–Ω–∏–π —É—Ä–æ–∫"
                'general': null        // null = –æ—Å–Ω–æ–≤–Ω–∏–π —á–∞—Ç –±–µ–∑ –≥—ñ–ª–∫–∏
            }
        };

        // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ–∫–∞–∑—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
        function showNotification(message, type = 'success') {
            const notification = document.createElement('div');
            notification.className = `notification ${type}`;
            notification.textContent = message;
            document.body.appendChild(notification);
            
            setTimeout(() => notification.classList.add('show'), 100);
            
            setTimeout(() => {
                notification.classList.remove('show');
                setTimeout(() => document.body.removeChild(notification), 300);
            }, 3000);
        }

        // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –≤ —è–∫—É –≥—ñ–ª–∫—É –≤—ñ–¥–ø—Ä–∞–≤–ª—è—Ç–∏
        function getThreadId(form) {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ ID —Ñ–æ—Ä–º–∏
            const formId = form.id;
            console.log('Form ID:', formId); // –î–ª—è –Ω–∞–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è
            
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ñ–æ—Ä–º—É –ø—Ä–æ–±–Ω–æ–≥–æ —É—Ä–æ–∫—É
            if (formId === 'wf-form-free') {
                console.log('–í–∏–∑–Ω–∞—á–µ–Ω–æ —Ñ–æ—Ä–º—É –ø—Ä–æ–±–Ω–æ–≥–æ —É—Ä–æ–∫—É (wf-form-free)');
                return TELEGRAM_CONFIG.threads.trial_lesson;
            }
            
            // –¢–∞–∫–æ–∂ –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∫–ª–∞—Å—É –∞–±–æ data-–∞—Ç—Ä–∏–±—É—Ç—É
            if (form.classList.contains('forma-free') || 
                form.classList.contains('wf-form-free') ||
                form.dataset.formType === 'free' ||
                form.dataset.formType === 'trial') {
                console.log('–í–∏–∑–Ω–∞—á–µ–Ω–æ —Ñ–æ—Ä–º—É –ø—Ä–æ–±–Ω–æ–≥–æ —É—Ä–æ–∫—É –∑–∞ –∫–ª–∞—Å–æ–º –∞–±–æ data-–∞—Ç—Ä–∏–±—É—Ç–æ–º');
                return TELEGRAM_CONFIG.threads.trial_lesson;
            }
            
            // –í—Å—ñ —ñ–Ω—à—ñ —Ñ–æ—Ä–º–∏ –π–¥—É—Ç—å –≤ –∑–∞–≥–∞–ª—å–Ω—ñ –∑–∞—è–≤–∫–∏
            console.log('–í–∏–∑–Ω–∞—á–µ–Ω–æ –∑–∞–≥–∞–ª—å–Ω—É —Ñ–æ—Ä–º—É');
            return TELEGRAM_CONFIG.threads.general;
        }

        // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ Telegram
        async function sendToTelegram(formData, threadId) {
            try {
                const message = formatMessage(formData);
                
                const payload = {
                    chat_id: TELEGRAM_CONFIG.chatId,
                    text: message,
                    parse_mode: 'HTML',
                    disable_web_page_preview: true
                };

                // –î–æ–¥–∞—î–º–æ message_thread_id —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –≤—ñ–Ω –≤–∏–∑–Ω–∞—á–µ–Ω–∏–π —ñ –Ω–µ null
                if (threadId !== null && threadId !== undefined) {
                    payload.message_thread_id = threadId;
                    console.log('–í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑ message_thread_id:', threadId);
                } else {
                    console.log('–í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –±–µ–∑ message_thread_id (–æ—Å–Ω–æ–≤–Ω–∏–π —á–∞—Ç)');
                }
                
                console.log('Payload –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏:', payload); // –î–ª—è –Ω–∞–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è
                
                const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_CONFIG.botToken}/sendMessage`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(payload)
                });

                const result = await response.json();
                
                if (!response.ok) {
                    console.error('Telegram API error:', result);
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                console.log('–í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ Telegram:', result);
                return result.ok;
            } catch (error) {
                console.error('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', error);
                return false;
            }
        }

        // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏—Ç—è–≥—É–≤–∞–Ω–Ω—è UTM –º—ñ—Ç–æ–∫ –∑ URL
        function getUTMParams() {
            const urlParams = new URLSearchParams(window.location.search);
            const utmParams = {};
            
            const utmKeys = [
                'utm_source', 'utm_medium', 'utm_campaign', 
                'utm_term', 'utm_content', 'utm_id'
            ];
            
            utmKeys.forEach(key => {
                const value = urlParams.get(key);
                if (value) {
                    utmParams[key] = value;
                }
            });
            
            return utmParams;
        }

        // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        function formatMessage(formData) {
            const currentTime = new Date().toLocaleString('uk-UA');
            const utmParams = getUTMParams();
            
            let message = `üîî <b>–ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ –∑ —Å–∞–π—Ç—É</b>\n`;
            message += `üìÖ <b>–î–∞—Ç–∞:</b> ${currentTime}\n`;
            
            // –î–æ–¥–∞—î–º–æ —Ç–∏–ø —Ñ–æ—Ä–º–∏
            if (formData.formType) {
                const typeEmoji = formData.formType === 'trial' ? 'üéì' : 'üìã';
                const typeName = formData.formType === 'trial' ? '–ü—Ä–æ–±–Ω–∏–π —É—Ä–æ–∫' : '–ó–∞–≥–∞–ª—å–Ω–∞ –∑–∞—è–≤–∫–∞';
                message += `${typeEmoji} <b>–¢–∏–ø –∑–∞—è–≤–∫–∏:</b> ${typeName}\n`;
            }
            
            message += `\n`;
            
            if (formData.name) {
                message += `üë§ <b>–Ü–º'—è:</b> ${formData.name}\n`;
            }
            
            if (formData.phone) {
                message += `üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${formData.phone}\n`;
            }
            
            if (formData.field) {
                message += `üìù <b>–î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è:</b> ${formData.field}\n`;
            }
            
            message += `\nüåê <b>–°—Ç–æ—Ä—ñ–Ω–∫–∞:</b> ${window.location.href}`;
            
            if (Object.keys(utmParams).length > 0) {
                message += `\n\nüìä <b>UTM –º—ñ—Ç–∫–∏:</b>\n`;
                
                Object.entries(utmParams).forEach(([key, value]) => {
                    const displayName = key.replace('utm_', '').replace('_', ' ');
                    message += `‚Ä¢ <b>${displayName}:</b> ${value}\n`;
                });
            }
            
            return message;
        }

        // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–±–æ—Ä—É –¥–∞–Ω–∏—Ö –∑ —Ñ–æ—Ä–º–∏
        function collectFormData(form) {
            const formData = {};
            
            // –ó–±–∏—Ä–∞—î–º–æ –¥–∞–Ω—ñ –∑ –ø–æ–ª—ñ–≤ (–ø—ñ–¥—Ç—Ä–∏–º–∫–∞ —Ä—ñ–∑–Ω–∏—Ö —Å–µ–ª–µ–∫—Ç–æ—Ä—ñ–≤)
            const nameField = form.querySelector('#name, input[name="name"], input[type="text"]');
            const phoneField = form.querySelector('#Phone-2, #phone, input[name="phone"], input[type="tel"]');
            const fieldField = form.querySelector('#field, textarea, input[name="message"]');
            
            if (nameField && nameField.value.trim()) {
                formData.name = nameField.value.trim();
            }
            
            if (phoneField && phoneField.value.trim()) {
                formData.phone = phoneField.value.trim();
            }
            
            if (fieldField && fieldField.value.trim()) {
                formData.field = fieldField.value.trim();
            }

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ç–∏–ø —Ñ–æ—Ä–º–∏
            const formId = form.id;
            if (formId === 'wf-form-free' || 
                form.classList.contains('forma-free') ||
                form.classList.contains('wf-form-free') ||
                form.dataset.formType === 'free' ||
                form.dataset.formType === 'trial') {
                formData.formType = 'trial';
            } else {
                formData.formType = 'general';
            }
            
            console.log('–ó—ñ–±—Ä–∞–Ω—ñ –¥–∞–Ω—ñ —Ñ–æ—Ä–º–∏:', formData); // –î–ª—è –Ω–∞–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è
            return formData;
        }

        // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó —Ñ–æ—Ä–º–∏
        function validateForm(formData) {
            if (!formData.name && !formData.phone) {
                return false;
            }
            return true;
        }

        // –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –æ–±—Ä–æ–±–∫–∏ —Ñ–æ—Ä–º–∏
        async function handleFormSubmit(event) {
            const form = event.target;
            if (!form) return;
            
            // –ó—É–ø–∏–Ω—è—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É –≤—ñ–¥–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º–∏ —Ç–∏–º—á–∞—Å–æ–≤–æ
            event.preventDefault();
            
            // –§–ª–∞–≥ –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è —á–∏ –±—É–ª–∞ —Ñ–æ—Ä–º–∞ –≤–∂–µ –æ–±—Ä–æ–±–ª–µ–Ω–∞
            if (form.dataset.telegramSent === 'true') {
                // –Ø–∫—â–æ –≤–∂–µ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram, –¥–æ–∑–≤–æ–ª—è—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É –≤—ñ–¥–ø—Ä–∞–≤–∫—É
                form.dataset.telegramSent = 'false';
                return true;
            }
            
            // –ë–ª–æ–∫—É—î–º–æ –∫–Ω–æ–ø–∫—É –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
            const submitButton = form.querySelector('button[type="submit"], input[type="submit"]');
            if (submitButton) {
                submitButton.disabled = true;
                submitButton.classList.add('loading');
            }
            
            try {
                // –ó–±–∏—Ä–∞—î–º–æ –¥–∞–Ω—ñ
                const formData = collectFormData(form);
                
                // –í–∞–ª—ñ–¥—É—î–º–æ –¥–∞–Ω—ñ
                if (!validateForm(formData)) {
                    showNotification('–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –æ–±–æ–≤\'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è', 'error');
                    if (submitButton) {
                        submitButton.disabled = false;
                        submitButton.classList.remove('loading');
                    }
                    return false;
                }

                // –í–∏–∑–Ω–∞—á–∞—î–º–æ Thread ID
                const threadId = getThreadId(form);
                
                // –õ–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –Ω–∞–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è
                const threadName = threadId === TELEGRAM_CONFIG.threads.trial_lesson ? 
                    '–ó–∞—è–≤–∫–∏ –Ω–∞ –ø—Ä–æ–±–Ω–∏–π —É—Ä–æ–∫' : '–û—Å–Ω–æ–≤–Ω–∏–π —á–∞—Ç';
                console.log(`üì§ –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ñ–æ—Ä–º—É "${form.id}" –≤ –≥—ñ–ª–∫—É: ${threadName} (Thread ID: ${threadId})`);
                
                // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤ Telegram
                const success = await sendToTelegram(formData, threadId);
                
                if (success) {
                    console.log(`‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –≥—ñ–ª–∫—É: ${threadName}`);
                    showNotification(`–ó–∞—è–≤–∫–∞ —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞!`, 'success');
                    
                    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ñ–ª–∞–≥ —â–æ —Ñ–æ—Ä–º–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Telegram
                    form.dataset.telegramSent = 'true';
                    
                    // –†–æ–∑–±–ª–æ–∫–æ–≤—É—î–º–æ –∫–Ω–æ–ø–∫—É
                    if (submitButton) {
                        submitButton.disabled = false;
                        submitButton.classList.remove('loading');
                    }
                    
                    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ñ–æ—Ä–º—É —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–º —Å–ø–æ—Å–æ–±–æ–º
                    setTimeout(() => {
                        // –ü—Ä–æ–≥—Ä–∞–º–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ñ–æ—Ä–º—É
                        form.submit();
                    }, 100);
                    
                } else {
                    console.log('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –≤ Telegram, –∞–ª–µ –ø—Ä–æ–¥–æ–≤–∂—É—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É –≤—ñ–¥–ø—Ä–∞–≤–∫—É');
                    showNotification('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –≤ Telegram, –∞–ª–µ —Ñ–æ—Ä–º–∞ –±—É–¥–µ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞', 'error');
                    
                    // –†–æ–∑–±–ª–æ–∫–æ–≤—É—î–º–æ –∫–Ω–æ–ø–∫—É
                    if (submitButton) {
                        submitButton.disabled = false;
                        submitButton.classList.remove('loading');
                    }
                    
                    // –í—Å–µ –æ–¥–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ñ–æ—Ä–º—É —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–º —Å–ø–æ—Å–æ–±–æ–º
                    setTimeout(() => {
                        form.dataset.telegramSent = 'true';
                        form.submit();
                    }, 100);
                }
                
            } catch (error) {
                console.error('–ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ —Ñ–æ—Ä–º–∏:', error);
                showNotification('–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞, –∞–ª–µ —Ñ–æ—Ä–º–∞ –±—É–¥–µ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞', 'error');
                
                // –†–æ–∑–±–ª–æ–∫–æ–≤—É—î–º–æ –∫–Ω–æ–ø–∫—É
                if (submitButton) {
                    submitButton.disabled = false;
                    submitButton.classList.remove('loading');
                }
                
                // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ñ–æ—Ä–º—É –Ω–∞–≤—ñ—Ç—å —è–∫—â–æ –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞
                setTimeout(() => {
                    form.dataset.telegramSent = 'true';
                    form.submit();
                }, 100);
            }
        }

        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
        document.addEventListener('DOMContentLoaded', function() {
            console.log('üöÄ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Telegram Form Sender');
            console.log('–ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è:', TELEGRAM_CONFIG);
            
            // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –≤—Å—ñ —Ñ–æ—Ä–º–∏
            const forms = document.querySelectorAll('form');
            console.log(`–ó–Ω–∞–π–¥–µ–Ω–æ —Ñ–æ—Ä–º: ${forms.length}`);
            
            forms.forEach(form => {
                // –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ä—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏ —è–∫—â–æ —î
                form.removeEventListener('submit', handleFormSubmit);
                // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –æ–±—Ä–æ–±–Ω–∏–∫
                form.addEventListener('submit', handleFormSubmit);
                
                const threadId = getThreadId(form);
                const threadName = threadId === TELEGRAM_CONFIG.threads.trial_lesson ? 
                    '–ó–∞—è–≤–∫–∏ –Ω–∞ –ø—Ä–æ–±–Ω–∏–π —É—Ä–æ–∫' : '–û—Å–Ω–æ–≤–Ω–∏–π —á–∞—Ç';
                
                console.log(`‚úÖ –§–æ—Ä–º–∞ "${form.id || '–±–µ–∑ ID'}" –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∞ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –≤: ${threadName}`);
                
                // –û—Å–æ–±–ª–∏–≤–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–ª—è —Ñ–æ—Ä–º–∏ –ø—Ä–æ–±–Ω–æ–≥–æ —É—Ä–æ–∫—É
                if (form.id === 'wf-form-free') {
                    console.log('‚≠ê –ó–Ω–∞–π–¥–µ–Ω–æ —Ñ–æ—Ä–º—É –ø—Ä–æ–±–Ω–æ–≥–æ —É—Ä–æ–∫—É: wf-form-free');
                }
            });
        });

        // API –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
        window.TelegramFormSender = {
            // –¢–µ—Å—Ç –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –≤ –≥—ñ–ª–∫—É –ø—Ä–æ–±–Ω–æ–≥–æ —É—Ä–æ–∫—É
            testTrialForm: async function() {
                console.log('üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –≤ –≥—ñ–ª–∫—É "–ó–∞—è–≤–∫–∏ –Ω–∞ –ø—Ä–æ–±–Ω–∏–π —É—Ä–æ–∫"');
                const testData = {
                    name: '–¢–µ—Å—Ç –ü—Ä–æ–±–Ω–∏–π –£—Ä–æ–∫',
                    phone: '+380123456789',
                    field: '–¢–µ—Å—Ç —Ñ–æ—Ä–º–∏ –ø—Ä–æ–±–Ω–æ–≥–æ —É—Ä–æ–∫—É',
                    formType: 'trial'
                };
                
                const success = await sendToTelegram(testData, TELEGRAM_CONFIG.threads.trial_lesson);
                if (success) {
                    console.log('‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–±–Ω–æ–≥–æ —É—Ä–æ–∫—É –ø—Ä–æ–π—à–æ–≤ —É—Å–ø—ñ—à–Ω–æ!');
                    showNotification('–¢–µ—Å—Ç –ø—Ä–æ–±–Ω–æ–≥–æ —É—Ä–æ–∫—É —É—Å–ø—ñ—à–Ω–∏–π!', 'success');
                } else {
                    console.log('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—Ä–æ–±–Ω–æ–≥–æ —É—Ä–æ–∫—É');
                    showNotification('–ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É –ø—Ä–æ–±–Ω–æ–≥–æ —É—Ä–æ–∫—É', 'error');
                }
            },
            
            // –¢–µ—Å—Ç –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –≤ –æ—Å–Ω–æ–≤–Ω–∏–π —á–∞—Ç
            testGeneralForm: async function() {
                console.log('üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –≤ –æ—Å–Ω–æ–≤–Ω–∏–π —á–∞—Ç');
                const testData = {
                    name: '–¢–µ—Å—Ç –ó–∞–≥–∞–ª—å–Ω–∞ –ó–∞—è–≤–∫–∞',
                    phone: '+380123456789',
                    field: '–¢–µ—Å—Ç –∑–∞–≥–∞–ª—å–Ω–æ—ó —Ñ–æ—Ä–º–∏',
                    formType: 'general'
                };
                
                const success = await sendToTelegram(testData, TELEGRAM_CONFIG.threads.general);
                if (success) {
                    console.log('‚úÖ –¢–µ—Å—Ç –∑–∞–≥–∞–ª—å–Ω–æ—ó –∑–∞—è–≤–∫–∏ –ø—Ä–æ–π—à–æ–≤ —É—Å–ø—ñ—à–Ω–æ!');
                    showNotification('–¢–µ—Å—Ç –∑–∞–≥–∞–ª—å–Ω–æ—ó –∑–∞—è–≤–∫–∏ —É—Å–ø—ñ—à–Ω–∏–π!', 'success');
                } else {
                    console.log('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≥–∞–ª—å–Ω–æ—ó –∑–∞—è–≤–∫–∏');
                    showNotification('–ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É –∑–∞–≥–∞–ª—å–Ω–æ—ó –∑–∞—è–≤–∫–∏', 'error');
                }
            },
            
            // –ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω—É –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é
            showConfig: function() {
                console.log('üìã –ü–æ—Ç–æ—á–Ω–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è:', TELEGRAM_CONFIG);
            },
            
            // –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ thread ID
            checkThreadId: async function(threadId) {
                console.log(`üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ thread ID: ${threadId}`);
                const testData = {
                    name: `–¢–µ—Å—Ç Thread ${threadId}`,
                    phone: '+380123456789',
                    formType: 'test'
                };
                
                const success = await sendToTelegram(testData, threadId);
                if (success) {
                    console.log(`‚úÖ Thread ID ${threadId} –ø—Ä–∞—Ü—é—î!`);
                } else {
                    console.log(`‚ùå Thread ID ${threadId} –Ω–µ –ø—Ä–∞—Ü—é—î`);
                }
            },
            
            // –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ —Ñ–æ—Ä–º–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
            showForms: function() {
                const forms = document.querySelectorAll('form');
                console.log(`üìù –ó–Ω–∞–π–¥–µ–Ω–æ ${forms.length} —Ñ–æ—Ä–º –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ:`);
                forms.forEach((form, index) => {
                    const threadId = getThreadId(form);
                    const threadName = threadId === TELEGRAM_CONFIG.threads.trial_lesson ? 
                        '–ó–∞—è–≤–∫–∏ –Ω–∞ –ø—Ä–æ–±–Ω–∏–π —É—Ä–æ–∫' : '–û—Å–Ω–æ–≤–Ω–∏–π —á–∞—Ç';
                    console.log(`${index + 1}. ID: "${form.id || '–Ω–µ–º–∞—î'}", –ö–ª–∞—Å–∏: "${form.className || '–Ω–µ–º–∞—î'}", –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –≤: ${threadName}`);
                });
            }
        };


